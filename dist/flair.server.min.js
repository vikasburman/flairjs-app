/**
 * @preserve
 * Flair.js Fabric
 * Foundation for True Object Oriented JavaScript Apps
 * 
 * Assembly: flair.server
 *     File: ./flair.server.js
 *  Version: 0.55.16
 *  Fri, 09 Aug 2019 02:18:15 GMT
 * 
 * (c) 2017-2019 Vikas Burman
 * MIT
 */
!function(e,t){"use strict";"function"==typeof!0&&(!0).amd?(!0)(()=>t):"object"==typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=t),module.exports=exports=t):e["flair.server"]=t}(this,async function(e,t){"use strict";const{Class:s,Struct:r,Enum:n,Interface:i,Mixin:a,Aspects:o,AppDomain:l,$$:c,attr:p,bring:u,Container:d,include:f,Port:h,on:v,post:m,telemetry:$,Reflector:y,Serializer:g,Tasks:w,as:b,is:x,isDefined:S,isComplies:P,isDerivedFrom:R,isAbstract:O,isSealed:j,isStatic:A,isSingleton:I,isDeprecated:E,isImplements:H,isInstanceOf:F,isMixed:T,getAssembly:B,getAttr:D,getContext:M,getResource:k,getRoute:z,getType:N,ns:C,getTypeOf:V,getTypeName:G,typeOf:J,dispose:L,using:W,Args:K,Exception:U,noop:q,nip:Q,nim:X,nie:Y,event:Z}=e,{TaskInfo:_}=e.Tasks,{env:ee}=e.options,{guid:te,forEachAsync:se,stuff:re,replaceAll:ne,splitAndTrim:ie,findIndexByProp:ae,findItemByProp:oe,which:le,isArrowFunc:ce,isASyncFunc:pe,sieve:ue,deepMerge:de,getLoadedScript:fe,b64EncodeUnicode:he,b64DecodeUnicode:ve,lens:me,globalSetting:$e}=e.utils,{$$static:ye,$$abstract:ge,$$virtual:we,$$override:be,$$sealed:xe,$$private:Se,$$privateSet:Pe,$$protected:Re,$$protectedSet:Oe,$$readonly:je,$$async:Ae,$$overload:Ie,$$enumerate:Ee,$$dispose:He,$$post:Fe,$$on:Te,$$timer:Be,$$type:De,$$args:Me,$$inject:ke,$$resource:ze,$$asset:Ne,$$singleton:Ce,$$serialize:Ve,$$deprecate:Ge,$$session:Je,$$state:Le,$$conditional:We,$$noserialize:Ke,$$ns:Ue}=c,qe=ee.isServer||ee.isWorker?null:(!0).document,Qe=l.context.current().name,Xe=t,Ye=Xe.substr(0,Xe.lastIndexOf("/")+1);l.loadPathOf("flair.server",Ye);let Ze=JSON.parse('{"express":{"server-http":{"enable":false,"port":80,"timeout":-1},"server-https":{"enable":false,"port":443,"timeout":-1,"privateKey":"","publicCert":""}},"envVars":{"vars":[],"options":{"overwrite":true}},"routing":{"mounts":{"main":"/"},"main-settings":[],"main-middlewares":[],"main-interceptors":[],"main-resHeaders":[]}}'),_e=e.Port("settingsReader");if("function"==typeof _e){let e=_e("flair.server");e&&(Ze=de([Ze,e],!1))}Ze=Object.freeze(Ze);let et=JSON.parse("{}");et=Object.freeze(et);let tt=()=>{};return l.context.current().currentAssemblyBeingLoaded("./flair.server{.min}.js"),await(async()=>{const e=await f("flair.app.Handler");c("ns","flair.api"),s("RestHandler",e,function(){c("private"),this.run=(async(e,t,s)=>{let r=null;if(e!==q)try{r=await e(t,s)}catch(e){s.status(e.status||500).json({status:e.status,message:e.message})}else s.status(501).json({status:"501",message:"Not Implemented"});return r}),this.get=(async(e,t)=>await this.run(this.onGet,e,t)),this.post=(async(e,t)=>await this.run(this.onPost,e,t)),this.put=(async(e,t)=>await this.run(this.onPut,e,t)),this.patch=(async(e,t)=>await this.run(this.onPatch,e,t)),this.delete=(async(e,t)=>await this.run(this.onDelete,e,t)),c("protected"),c("virtual"),c("async"),this.onGet=q,c("protected"),c("virtual"),c("async"),this.onPost=q,c("protected"),c("virtual"),c("async"),this.onPut=q,c("protected"),c("virtual"),c("async"),this.onPatch=q,c("protected"),c("virtual"),c("async"),this.onDelete=q})})(),await(async()=>{const{RestHandler:e}=C("flair.api");c("ns","flair.api"),s("RESTEndPoint",e,function(){})})(),await(async()=>{c("ns","flair.api"),s("RestInterceptor",function(){c("virtual"),c("async"),this.run=q})})(),await(async()=>{const e=await f("flair.app.Host");c("sealed"),c("ns","flair.app"),s("ServerHost",e,function(){let e={},t=null,s=null,r=Ze.express["server-http"],n=Ze.express["server-https"];c("override"),this.construct=(e=>{e("Server")}),this.app={get:()=>this.mounts["main"].app,set:q},this.mounts={get:()=>e,set:q},c("override"),this.boot=(async t=>{t();const s=await f("express | x"),r=(e,t)=>{let s=Ze.routing[`${e}-settings`];if(s&&s.length>0)for(let e of s)t.set(e.name,e.value)};let n=s();r("main",n);let i="",a=null;for(let t of Object.keys(Ze.routing.mounts))"main"===t?(i="/",a=n):(i=Ze.routing.mounts[t],a=s()),e[t]=Object.freeze({name:t,root:i,app:a}),"main"!==t&&(r(t,a),n.use(i,a));e=Object.freeze(e)}),c("override"),this.start=(async e=>{e();const i=await f("fs | x"),a=await f("http | x"),o=await f("https | x"),c=await f("http-shutdown | x");if(r.enable&&((t=c(t=a.createServer(this.app))).on("error",e=>{this.error(e)}),-1!==r.timeout&&(t.timeout=r.timeout)),n.enable){const e=i.readFileSync(l.resolvePath(n.privateKey),"utf8"),t=i.readFileSync(l.resolvePath(n.publicCert),"utf8"),r={key:e,cert:t};(s=c(s=o.createServer(r,this.app))).on("error",e=>{this.error(e)}),-1!==n.timeout&&(s.timeout=n.timeout)}}),c("override"),this.ready=(e=>new Promise((i,a)=>{e();let o=r.port||80,c=process.env.PORT||n.port||443;t&&s?t.listen(o,()=>{s.listen(c,()=>{console.log(`${l.app().info.name}, v${l.app().info.version} (http: ${o}, https: ${c})`),i()})}):t?t.listen(o,()=>{console.log(`${l.app().info.name}, v${l.app().info.version} (http: ${o})`),i()}):s?s.listen(c,()=>{console.log(`${l.app().info.name}, v${l.app().info.version} (https: ${c})`),i()}):(console.log(`${l.app().info.name}, v${l.app().info.version}`),i())})),c("override"),this.stop=(async e=>{e(),t&&(console.log("http server is shutting down..."),t.shutdown(()=>{t=null,console.log("http server is cleanly shutdown!")})),s&&(console.log("https server is shutting down..."),s.shutdown(()=>{s=null,console.log("https server is cleanly shutdown!")}))}),c("override"),this.dispose=(t=>{t(),e=null})})})(),await(async()=>{const e=await f("flair.app.Bootware");c("sealed"),c("ns","flair.boot"),s("Middlewares",e,function(){c("override"),this.construct=(e=>{e("Express Middlewares",!0)}),c("override"),this.boot=(async(e,t)=>{e();let s=Ze.routing[`${t.name}-middlewares`];if(s&&s.length>0){let e=null,r=null;for(let n of s)if(n.name)try{e=require(n.name),r=n.func?e[n.func]:e;let s=[],i=null;n.args=n.args||[];for(let e of n.args){if("string"==typeof e&&e.startsWith("return "))i=new Function(e)();else if("object"==typeof e){for(let t in e)e.hasOwnProperty(t)&&"string"==typeof(i=e[t])&&i.startsWith("return ")&&(i=new Function(e)(),e[t]=i);i=e}else i=e;s.push(i)}t.app.use(r(...s))}catch(e){throw U.OperationFailed(`Middleware ${n.module} load failed.`,e,this.boot)}}})})})(),await(async()=>{const e=await f("flair.app.Bootware");c("sealed"),c("ns","flair.boot"),s("NodeEnv",e,function(){c("override"),this.construct=(e=>{e("Node Server Environment")}),c("override"),this.boot=(async e=>{if(e(),Ze.envVars.vars.length>0){const e=await f("node-env-file | x");if(e)for(let t of Ze.envVars.vars)e(l.resolvePath(t),Ze.envVars.options)}})})})(),await(async()=>{const e=await f("flair.app.Bootware");c("sealed"),c("ns","flair.boot"),s("ResHeaders",e,function(){c("override"),this.construct=(e=>{e("Server Response Headers",!0)}),c("override"),this.boot=(async(e,t)=>{e();let s=Ze.routing[`${t.name}-resHeaders`];s&&s.length>0&&t.app.use((e,t,r)=>{for(let e of s)t.setHeader(e.name,e.value);r()})})})})(),await(async()=>{const e=await f("flair.app.Bootware");c("sealed"),c("ns","flair.boot"),s("ServerRouter",e,function(){const{RestHandler:e,RestInterceptor:t}=C("flair.api");let s=null;c("override"),this.construct=(e=>{e("Server Router",!0)}),c("override"),this.boot=(async(r,n)=>{r(),s||(s=l.context.current().allRoutes(!0)).sort((e,t)=>e.index<t.index?-1:e.index>t.index?1:0);let i=!1;const a=(e,t,s)=>new Promise((r,n)=>{try{let i;(new e).run(t,s).then(()=>{t.$stop?n():r()}).catch(n)}catch(e){n(e)}}),o=(e,s,r)=>se(e,(e,n,i)=>{f(i).then(o=>{let l=b(o,t);l?a(l,s,r).then(e).catch(n):n(U.InvalidDefinition(`Invalid interceptor type. (${i})`))}).catch(n)});for(let t of s)("string"==typeof t.mount&&t.mount===n.name||-1!==t.mount.indexOf(n.name))&&t.verbs.forEach(s=>{n.app[s](t.path,(r,a,l)=>{const c=e=>{l(e)},p=e=>{e||l()},u=()=>{f(t.handler).then(n=>{let o=b(n,e);if(o)try{W(new o,e=>{(i=e[s](r,a))&&"function"==typeof i.then?i.then(e=>{p(e)}).catch(c):p(i)})}catch(e){c(e)}else c(U.InvalidDefinition(`Invalid route handler. ${t.handler}`))}).catch(c)};r.$stop=!1;let d=Ze.routing[`${n.name}-interceptors`]||[];o(d,r,a).then(()=>{r.$stop?a.end():u()}).catch(e=>{r.stop?a.end():c(e)})})});n.app.use((e,t,s)=>{var r=new Error("Not Found");r.status=404,s(r)}),ee.isProd,n.app.use((e,t,s)=>{s.status(e.status||500),t.xhr?s.status(500).send({error:e.toString()}):s.render("error",{message:e.message,error:e}),s.end()})})})})(),l.context.current().currentAssemblyBeingLoaded(""),l.registerAdo('{"name":"flair.server","file":"./flair.server{.min}.js","package":"flairjs-fabric","desc":"Foundation for True Object Oriented JavaScript Apps","title":"Flair.js Fabric","version":"0.55.16","lupdate":"Fri, 09 Aug 2019 02:18:15 GMT","builder":{"name":"flairBuild","version":"1","format":"fasm","formatVersion":"1","contains":["init","func","type","vars","reso","asst","rout","sreg"]},"copyright":"(c) 2017-2019 Vikas Burman","license":"MIT","types":["flair.api.RestHandler","flair.api.RESTEndPoint","flair.api.RestInterceptor","flair.app.ServerHost","flair.boot.Middlewares","flair.boot.NodeEnv","flair.boot.ResHeaders","flair.boot.ServerRouter"],"resources":[],"assets":[],"routes":[]}'),Object.freeze({name:"flair.server",settings:Ze,config:et})});